@using Ecommerce.DTOs
@model BaseResponse<IEnumerable<CategoryDto>>;
@{
    ViewData["Title"] = "Category Page";
}
<div>
    <a asp-action="CreateCategory"  asp-controller="Category">
        create Category
    </a>
</div>
<h1 style="text-align: center;">List of Records</h1>
    <table style="width: 100%; border-collapse: collapse; margin-top: 20px;">
        <thead>
            <tr>
                <th style="border: 1px solid #ddd; padding: 8px; background-color: #f2f2f2; text-align: left;">S/N</th>
                <th style="border: 1px solid #ddd; padding: 8px; background-color: #f2f2f2; text-align: left;">Name</th>
                <th style="border: 1px solid #ddd; padding: 8px; background-color: #f2f2f2; text-align: left;">Description</th>
                 <th style="border: 1px solid #ddd; padding: 8px; background-color: #f2f2f2; text-align: left;">Edit</th>
            </tr>
        </thead>
        <tbody>
        @{
            var number = 1;
        }
        @foreach (var record in Model.Data)
        {
            <tr>
                <td style="border: 1px solid #ddd; padding: 8px; text-align: left;">@number</td>
                <td style="border: 1px solid #ddd; padding: 8px; text-align: left;">@record.Name</td>
                <td style="border: 1px solid #ddd; padding: 8px; text-align: left;">@record.Description</td>
                <td style="border: 1px solid #ddd; padding: 8px; text-align: left;">
                    <a asp-action="Update" asp-controller="Category" asp-route-id="@record.Name">
                        update
                    </a>
                </td>
            </tr>
            number++;
        }
        </tbody>
    </table>